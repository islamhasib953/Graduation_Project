import Dispatcher from './dispatcher'
import { getGlobalDispatcher, setGlobalDispatcher } from './global-dispatcher'
import { getGlobalOrigin, setGlobalOrigin } from './global-origin'
import { DecoratorHandler, RedirectHandler } from './handlers'
import Pool from './pool'
nimport Agent from './agent'
import { connect, pipeline, request, stream, upgrade } from './api'
import BalancedPool from './balanced-pool'
import Client from './client'
import buildConnector from './connector'
import EnvHttpProxyAgent from './env-http-proxy-agent'
import errors from './errors'
import interceptors from './interceptors'
import MockAgent from './mock-agent'
import MockClient from './mock-client'
import mockErrors from './mock-errors'
import MockPool from './mock-pool'
import ProxyAgent from './proxy-agent'
import RetryAgent from './retry-agent'
import RetryHandler from './retry-handler'
nexport * from './cache'
export * from './content-type'
export * from './cookies'
export * from './diagnostics-channel'
export * from './eventsource'
export * from './fetch'
export * from './file'
export * from './filereader'
export * from './formdata'
export { Interceptable } from './mock-interceptor'
export * from './util'
export * from './websocket'
texport { Agent, BalancedPool, buildConnector, Client, connect, DecoratorHandler, Dispatcher, EnvHttpProxyAgent, errors, getGlobalDispatcher, getGlobalOrigin, interceptors, MockAgent, MockClient, mockErrors, MockPool, pipeline, Pool, ProxyAgent, RedirectHandler, request, RetryAgent, RetryHandler, setGlobalDispatcher, setGlobalOrigin, stream, upgrade }
xport { Dispatcher, BalancedPool, Pool, Client, buildConnector, errors, Agent, request, stream, pipeline, connect, upgrade, setGlobalDispatcher, getGlobalDispatcher, setGlobalOrigin, getGlobalOrigin, interceptors, MockClient, MockPool, MockAgent, mockErrors, ProxyAgent, EnvHttpProxyAgent, RedirectHandler, DecoratorHandler, RetryHandler, RetryAgent }
export default Undici

declare namespace Undici {
  var Dispatcher: typeof import('undici-types/dispatcher').default
  var Pool: typeof import('undici-types/pool').default;
  var RedirectHandler: typeof import ('undici-types/handlers').RedirectHandler
  var DecoratorHandler: typeof import ('undici-types/handlers').DecoratorHandler
  var RetryHandler: typeof import ('undici-types/retry-handler').default
  var createRedirectInterceptor: typeof import ('undici-types/interceptors').default.createRedirectInterceptor
  var BalancedPool: typeof import('undici-types/balanced-pool').default;
  var Client: typeof import('undici-types/client').default;
  var buildConnector: typeof import('undici-types/connector').default;
  var errors: typeof import('undici-types/errors').default;
  var Agent: typeof import('undici-types/agent').default;
  var setGlobalDispatcher: typeof import('undici-types/global-dispatcher').setGlobalDispatcher;
  var getGlobalDispatcher: typeof import('undici-types/global-dispatcher').getGlobalDispatcher;
  var request: typeof import('undici-types/api').request;
  var stream: typeof import('undici-types/api').stream;
  var pipeline: typeof import('undici-types/api').pipeline;
  var connect: typeof import('undici-types/api').connect;
  var upgrade: typeof import('undici-types/api').upgrade;
  var MockClient: typeof import('undici-types/mock-client').default;
  var MockPool: typeof import('undici-types/mock-pool').default;
  var MockAgent: typeof import('undici-types/mock-agent').default;
  var mockErrors: typeof import('undici-types/mock-errors').default;
  var fetch: typeof import('undici-types/fetch').fetch;
  var Headers: typeof import('undici-types/fetch').Headers;
  var Response: typeof import('undici-types/fetch').Response;
  var Request: typeof import('undici-types/fetch').Request;
  var FormData: typeof import('undici-types/formdata').FormData;
  var File: typeof import('undici-types/file').File;
  var FileReader: typeof import('undici-types/filereader').FileReader;
  var caches: typeof import('undici-types/cache').caches;
  var interceptors: typeof import('undici-types/interceptors').default;
}
